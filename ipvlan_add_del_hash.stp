#!/usr/bin/stap

function print_time() {
    mirosec = gettimeofday_us()
    sec = gettimeofday_s()
    printf("%s %d\(us\)\n", ctime(sec), mirosec-sec*1000000)
}

function print_process_info() {
    printf("pid:%d, pid name:%s, ppid:%d, ppid name:%s, func:%s, cmd:%s\n",
            pid(), pid2execname(pid()), ppid(), pid2execname(ppid()), ppfunc(), cmdline_str())
}

function print_ustack() {
    print_usyms(ubacktrace())
    printf("------------------\n\n")
}

function print_kstack() {
    print_syms(backtrace())
    printf("------------------\n\n")
}

function is_target:long() {
    if(target() == 99)
        return 1
    if(pid() == target())
        return 1
    return 0
}

probe kernel.function("dev_forward_skb")
{
}

probe module("ipvlan").statement("ipvlan_ht_addr_add@drivers/net/ipvlan/ipvlan_core.c:101")
{
    if($addr->atype != 0)
    {
        printf("\n")
        print_process_info()
        printf("addr:%s\n", format_ipaddr($addr->ipu->ip4->s_addr, 2))
        printf("hlhead[(hash)%d], hlnode:%p\n", $hash, &$addr->hlnode)
        printf("port:%p\n", $port)
        for(i = 0; i < 256; i++)
            printf("hlhead[%d]:%p\n", i, $port->hlhead[i]->first)
        print_kstack()
    }
}

probe module("ipvlan").function("ipvlan_ht_addr_del")
{
    printf("\n")
    print_process_info()
    printf("addr:%s\n", format_ipaddr($addr->ipu->ip4->s_addr, 2))
    printf("del hlnode:%p\n", &$addr->hlnode)
    print_kstack()
}
