#!/usr/bin/stap

function print_time() {
    mirosec = gettimeofday_us()
    sec = gettimeofday_s()
    printf("%s %d\(us\)\n", ctime(sec), mirosec-sec*1000000)
}

function print_process_info() {
    printf("pid:%d, pid name:%s, ppid:%d, ppid name:%s, func:%s, cmd:%s\n",
            pid(), pid2execname(pid()), ppid(), pid2execname(ppid()), ppfunc(), cmdline_str())
}

function print_ustack() {
    print_usyms(ubacktrace())
    printf("------------------\n\n")
}

function print_kstack() {
    print_syms(backtrace())
    printf("------------------\n\n")
}


probe module("ipvlan").function("ipvlan_addr4_event")
{
    printf("\n")
    print_time()
    print_process_info()
    if4 = &@cast($ptr, "in_ifaddr")
    if($event == 1)
    {
        printf("add %s to interface %d: %s\n",
                format_ipaddr(if4->ifa_address ,2),
                if4->ifa_dev->dev->ifindex,
                if4->ifa_dev->dev->name$)
    }
    if($event == 2)
    {

        printf("del %s from interface %d: %s\n",
                format_ipaddr(if4->ifa_address ,2),
                if4->ifa_dev->dev->ifindex,
                if4->ifa_dev->dev->name$)
    }
    print_kstack()
}

probe module("ipvlan").function("ipvlan_ht_addr_add")
{
    if($addr->atype != 0)
    {
        printf("\n")
        print_time()
        print_process_info()
        printf("add ip:%s to ipvlan %d: %s\n", format_ipaddr($addr->ipu->ip4->s_addr, 2), $ipvlan->dev->ifindex, $ipvlan->dev->name$)
    }
}

probe module("ipvlan").statement("ipvlan_ht_addr_add@drivers/net/ipvlan/ipvlan_core.c:101")
{
    if($addr->atype != 0)
    {
        printf("\n")
        print_time()
        print_process_info()
        printf("addr:%s\n", format_ipaddr($addr->ipu->ip4->s_addr, 2))
        printf("hlhead[(hash)%d], hlnode:%p\n", $hash, &$addr->hlnode)
        printf("port:%p\n", $port)
        /* for(i = 0; i < 256; i++) */
            /* printf("hlhead[%d]:%p\n", i, $port->hlhead[i]->first) */
        print_kstack()
    }
}

probe module("ipvlan").function("ipvlan_ht_addr_del")
{
    printf("\n")
    print_time()
    print_process_info()
    printf("addr:%s\n", format_ipaddr($addr->ipu->ip4->s_addr, 2))
    printf("del hlnode:%p\n", &$addr->hlnode)
    print_kstack()
}

probe kernel.function("dev_change_net_namespace")
{
    printf("\n")
    print_time()
    print_process_info()
    printf("dev:%s:%d, net:%p to %p\n", $dev->name$, $dev->ifindex, $dev->nd_net, $net)
}

probe kernel.function("dev_change_name")
{
    printf("\n")
    print_time()
    print_process_info()
    printf("dev_id:%d, old_name:%s, new_name:%s\n", $dev->ifindex, $dev->name$, $newname$)
}
